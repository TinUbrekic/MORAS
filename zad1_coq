Require Import Coq.Bool.Bool.

Definition x := true.
Definition y := false.
Definition z := true.

Lemma equivalence1:
  ((x && negb y) || (negb(x && y)) || (negb x && y))=
  negb x || negb y.
Proof.
  intros. induction x.
    - simpl. reflexivity.
    - simpl. reflexivity.
Qed.

Inductive B : Type :=
  | O : B
  | I : B.

Definition And (x y : B) : B :=
match x with
  | O => O
  | I => y
end.

Definition Or (x y : B) : B :=
match x with
  | O => y
  | I => I
end.

Definition Not (x : B) : B :=
match x with
  | O => I
  | I => O
end.


Lemma equivalence2 (X Y Z : B): 
  And (Not (And (Not X) (And Y Z))) (And (Not (And X (And Y (Not Z)))) (And X (And (Not Y) Z))) = And (X) (And (Not Y) (Z)).
Proof.
  intros. destruct X. destruct Y. destruct Z.
  - simpl. reflexivity.
  - simpl. reflexivity.
  - simpl. destruct Z.
  -- simpl. reflexivity.
  -- simpl. reflexivity.
  - simpl. destruct Y.
  -- simpl. reflexivity.
  -- simpl. destruct Z.
  --- simpl. reflexivity.
  --- simpl. reflexivity.
Qed.
